{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","title","genre","year","movies","setMovies","movie","setMovie","handleChange","event","target","name","value","prevInput","console","log","useEffect","fetch","then","res","ok","json","jsonResponse","className","onChange","onClick","preventDefault","newMovie","axios","post","alert","map","id","_id","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,I,qBC6EAA,MAxEf,WAAgB,IAAD,EACeC,mBAAS,CACnC,CACEC,MAAO,GACPC,MAAO,GACPC,KAAM,MALG,mBACNC,EADM,KACEC,EADF,OASaL,mBAAS,CACjCC,MAAO,GACPC,MAAO,GACPC,KAAM,KAZK,mBASNG,EATM,KASCC,EATD,KA2Bb,SAASC,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MACdL,GAAS,SAACM,GACR,OAAO,2BAAKA,GAAZ,kBAAwBF,EAAOC,OAEjCE,QAAQC,IAAIT,GAiBd,OAlCAU,qBAAU,WACRC,MAAM,WACHC,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,UAGdH,MAAK,SAACI,GACLjB,EAAUiB,QAEb,CAAClB,IAyBF,sBAAKmB,UAAU,MAAf,UACE,2CACA,iCACE,uBAAOC,SAAUhB,EAAcG,KAAK,QAAQC,MAAON,EAAML,QACzD,uBAAOuB,SAAUhB,EAAcG,KAAK,QAAQC,MAAON,EAAMJ,QACzD,uBAAOsB,SAAUhB,EAAcG,KAAK,OAAOC,MAAON,EAAMH,OACxD,wBAAQsB,QAtBd,SAAkBhB,GAChBA,EAAMiB,iBACN,IAAMC,EAAW,CACf1B,MAAOK,EAAML,MACbC,MAAOI,EAAMJ,MACbC,KAAMG,EAAMH,MAEdyB,IAAMC,KAAK,YAAaF,GACxBG,MAAM,gBAcF,0BAED1B,EAAO2B,KAAI,SAACzB,GACX,OACE,gCACE,6BAAKA,EAAML,QACX,4BAAIK,EAAMJ,QACV,4BAAII,EAAMH,OACV,wBAAQsB,QAAS,kBApBNO,EAoBwB1B,EAAM2B,IAnBjDL,IAAMM,OAAN,kBAAwBF,SACxBF,MAAM,iBAFR,IAAqBE,GAoBX,8BCzDGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9f75957a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [movies, setMovies] = useState([\n    {\n      title: \"\",\n      genre: \"\",\n      year: \"\",\n    },\n  ]);\n\n  const [movie, setMovie] = useState({\n    title: \"\",\n    genre: \"\",\n    year: \"\",\n  });\n\n  useEffect(() => {\n    fetch(\"/movies\")\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then((jsonResponse) => {\n        setMovies(jsonResponse);\n      });\n  }, [movies]);\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setMovie((prevInput) => {\n      return { ...prevInput, [name]: value };\n    });\n    console.log(movie);\n  }\n  function addMovie(event) {\n    event.preventDefault();\n    const newMovie = {\n      title: movie.title,\n      genre: movie.genre,\n      year: movie.year,\n    };\n    axios.post(\"/newmovie\", newMovie);\n    alert(\"Movie Added\");\n  }\n  function deleteMovie(id) {\n    axios.delete(`/delete/${id}`);\n    alert(\"Movie Deleted\");\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add Movie</h1>\n      <form>\n        <input onChange={handleChange} name=\"title\" value={movie.title}></input>\n        <input onChange={handleChange} name=\"genre\" value={movie.genre}></input>\n        <input onChange={handleChange} name=\"year\" value={movie.year}></input>\n        <button onClick={addMovie}>ADD MOVIE</button>\n      </form>\n      {movies.map((movie) => {\n        return (\n          <div>\n            <h1>{movie.title}</h1>\n            <p>{movie.genre}</p>\n            <p>{movie.year}</p>\n            <button onClick={() => deleteMovie(movie._id)}>DELETE</button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}